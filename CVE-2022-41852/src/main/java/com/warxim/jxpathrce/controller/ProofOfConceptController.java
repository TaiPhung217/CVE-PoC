package com.warxim.jxpathrce.controller;

import lombok.Value;
import org.apache.commons.jxpath.FunctionLibrary;
import org.apache.commons.jxpath.JXPathContext;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ProofOfConceptController {

    @Value
    public static class Person {
        String name;
        String website;
    }
    private final Person person = new Person( "Michal Valka", "warxim.com");

    @GetMapping("vulnerable-example")
    public Object getVulnerableExample(
            @RequestParam(defaultValue = "/") String path
    ) {
        var pathContext = JXPathContext.newContext(person);

        return pathContext.getValue(path);
    }

    @GetMapping("secure-example")
    public Object getSecureExample(
            @RequestParam(defaultValue = "/") String path
    ) {
        var pathContext = JXPathContext.newContext(person);

        pathContext.setFunctions(new FunctionLibrary());

        return pathContext.getValue(path);
    }

    private static final PackageFunctions GENERIC_FUNCTIONS = new PackageFunctions("", (String)null);

    @GetMapping("example2")
    public Object getVulnerableExample2(
        @RequestParam(defaultValue = "") String path 
    ) {
        var pathContext = JXPathContext.newContext(person);
        return pathContext.getValue("/" + path);

        JXPathContext context = JXPathContext.newContext(new Data());
        String jxPath = "run(newInstance(loadClass(getClassLoader(getClass(/)), \"com.warxim.dangerous.DangerousClass\")), \"warxim\")";
        Object result = context.getValue(jxPath);
    }

}
